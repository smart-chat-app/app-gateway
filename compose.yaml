version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: [ "2181:2181" ]

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on: [ zookeeper ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports: [ "9092:9092" ]

  redis:
    image: redis:7
    ports: [ "6379:6379" ]
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 3s
      retries: 20

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: [ "start-dev", "--import-realm", "--proxy=edge" ]
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      # ðŸ‘‡ make tokens & discovery use http://localhost:8088
      KC_HOSTNAME_URL: http://localhost:8088
      KC_HOSTNAME_ADMIN_URL: http://localhost:8088
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import:ro
    ports:
      - "8088:8080"   # host:container

  gateway:
    build: ./
    depends_on:
      keycloak:
        condition: service_started
      redis:
        condition: service_healthy
    environment:
      # ðŸ‘‡ issuer used to validate the 'iss' claim (public host URL)
      ISSUER_URI: http://localhost:8088/realms/chat-local
      # ðŸ‘‡ JWKS fetched over Docker network (internal)
      KEYCLOAK_JWKS: http://keycloak:8080/realms/chat-local/protocol/openid-connect/certs
    ports:
      - "8083:8083"
      - "9090:9090"
